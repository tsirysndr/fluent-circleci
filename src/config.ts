import { stringify } from "../deps.ts";
import { ConfigYaml, Workflows, WorkflowsSchema } from "./spec.ts";
import Job from "./job.ts";

class CircleCI {
  private yaml: ConfigYaml;

  constructor() {
    this.yaml = {
      version: 2.1,
      jobs: {},
      workflows: {},
    };
  }

  jobs(values: { [name: string]: Job }): CircleCI {
    for (const [name, value] of Object.entries(values)) {
      this.yaml.jobs[name] = value.into();
    }
    return this;
  }

  workflows(values: Workflows): CircleCI {
    WorkflowsSchema.parse(values);
    this.yaml.workflows = values;
    return this;
  }

  workflow(name: string, values: string[]): CircleCI {
    this.yaml.workflows[name] = { jobs: values };
    return this;
  }

  toString(): string {
    return `# Do not edit this file directly. It is generated by https://deno.land/x/fluent_circleci\n\n${stringify(
      this.yaml,
      { lineWidth: 0 }
    )
      .replaceAll("|-", "|")
      .replaceAll(">-", "|")}`;
  }

  save(path = ".circleci/config.yml") {
    const config = this.toString();
    Deno.writeTextFileSync(path, config);
  }
}

export default CircleCI;
